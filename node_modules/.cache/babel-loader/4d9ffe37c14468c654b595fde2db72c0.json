{"ast":null,"code":"var _jsxFileName = \"/Users/giancarlomansilla/tracker/src/Calendar/Calendar.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Calendar extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopUp: false,\n      showYearPopUp: false\n    };\n    this.weekdays = moment.weekdays();\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => {\n      return this.state.dateContext.format(\"Y\");\n    };\n\n    this.month = () => {\n      return this.state.dateContext.format(\"MMMM\");\n    };\n\n    this.daysInMonth = () => {\n      return this.state.dateContext.daysInMonth();\n    };\n\n    this.currentDate = () => {\n      return this.state.dateContext.get(\"date\");\n    };\n\n    this.currentDay = () => {\n      return this.state.dateContext.format(\"D\");\n    };\n\n    this.firstDayofMonth = () => {\n      let dateContext = this.state.dateContext;\n      let firstDay = moment(dateContext).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.SelectList = props => {\n      let popup = props.data.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, data, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this);\n      }); // return <div className=\"month-popup\">{popup}</div>;\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label-month\",\n        children: [this.month(), /*#__PURE__*/_jsxDEV(this.SelectList, {\n          date: this.months\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.width = _props.width || \"350 px\";\n    this.style = _props.style || {};\n  }\n\n  render() {\n    let weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"week-day\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayofMonth(); i++) {\n      blanks.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"emptySlot\",\n        children: \"\"\n      }, i * 80, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d === this.currentDay() ? \"day current-day\" : \"day\";\n      daysInMonth.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this));\n    }\n\n    console.log(\"days: \", daysInMonth);\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    let trElems = rows.map((d, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: d\n      }, i * 100, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"head\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"calendar-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"colSpan = \\\"5\\\"\", /*#__PURE__*/_jsxDEV(this.MonthNav, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weekdays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), trElems]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/giancarlomansilla/tracker/src/Calendar/Calendar.js"],"names":["React","moment","Calendar","Component","constructor","props","state","dateContext","today","showMonthPopUp","showYearPopUp","weekdays","weekdaysShort","months","year","format","month","daysInMonth","currentDate","get","currentDay","firstDayofMonth","firstDay","startOf","SelectList","popup","data","map","MonthNav","width","style","render","day","blanks","i","push","d","className","console","log","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nexport default class Calendar extends React.Component {\n  state = {\n    dateContext: moment(),\n    today: moment(),\n    showMonthPopUp: false,\n    showYearPopUp: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.width = props.width || \"350 px\";\n    this.style = props.style || {};\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort();\n  months = moment.months();\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth();\n  };\n  currentDate = () => {\n    return this.state.dateContext.get(\"date\");\n  };\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  firstDayofMonth = () => {\n    let dateContext = this.state.dateContext;\n    let firstDay = moment(dateContext).startOf(\"month\").format(\"d\");\n    return firstDay;\n  };\n\n  SelectList = (props) => {\n    let popup = props.data.map((data) => {\n      return (\n        <div key={data}>\n          <a href=\"#\">{data}</a>\n        </div>\n      );\n    });\n\n    // return <div className=\"month-popup\">{popup}</div>;\n  };\n\n  MonthNav = () => {\n    return (\n      <span className=\"label-month\">\n        {this.month()}\n        <this.SelectList date={this.months} />\n      </span>\n    );\n  };\n\n  render() {\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      );\n    });\n\n    let blanks = [];\n    for (let i = 0; i < this.firstDayofMonth(); i++) {\n      blanks.push(\n        <td key={i * 80} className=\"emptySlot\">\n          {\"\"}\n        </td>\n      );\n    }\n\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d === this.currentDay() ? \"day current-day\" : \"day\";\n      daysInMonth.push(\n        <td key={d} className={className}>\n          <span>{d}</span>\n        </td>\n      );\n    }\n    console.log(\"days: \", daysInMonth);\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n\n    let trElems = rows.map((d, i) => {\n      return <tr key={i * 100}>{d}</tr>;\n    });\n\n    return (\n      <div className=\"calendar-container\">\n        <h2>Calendar</h2>\n        <table className=\"calendar\">\n          <head>\n            <tr className=\"calendar-header\"></tr>\n            <td>\n              colSpan = \"5\"\n              <this.MonthNav />\n            </td>\n          </head>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElems}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}